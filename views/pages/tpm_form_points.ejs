<%- include('../layouts/header') %> <!-- Incluye el header -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TPM</title>
</head>
<body>
  <h2>ID CUARTO: <%= id_cuarto %></h2>
  <h2>ID EQUIPO: <%= id_equipo %></h2>
  <h2 id="id-tpm">ID TPM: <%= id_tpm %></h2>

  <form id="form-tpm" enctype="multipart/form-data">
    <div id="punto-contenedor" style="display: flex; flex-direction: column; align-items: center; gap: 20px;">

      <!-- Contenedor principal -->
      <div id="contenedor-padre" style="display: flex; width: 80%; border: 1px solid #ccc; border-radius: 10px; overflow: hidden;">
  
        <!-- Contenedor de la izquierda: Carrusel de imágenes -->
        <div id="imagenes" style="flex: 1; display: flex; align-items: center; justify-content: center; overflow: hidden; position: relative;">
          <button type="button" id="prev-img" style="position: absolute; left: 10px;">◀</button>
          <img id="imagen-actual" src="/uploads/<%= puntos[0].ayuda_visual[0] %>" alt="Imagen Ayuda Visual" style="max-width: 100%; max-height: 100%;">
          <button type="button" id="next-img" style="position: absolute; right: 10px;">▶</button>
        </div>
  
        <!-- Contenedor de la derecha: Información asociado a los puntos -->
        <div id="informacion" style="flex: 1; padding: 20px; background-color: #f9f9f9;">
          <h3>Orden: <span id="orden"><%= puntos[0].orden %></span></h3>
          <p>Categoría: <span id="categoria"><%= puntos[0].nombre_categoria %></span></p>
          <p>Actividad: <span id="actividad"><%= puntos[0].actividad %></span></p>
          <p>Tiempo: <span id="tiempo"><%= puntos[0].tiempo %></span></p>
          <p>Procedimiento: <span id="procedimiento"><%= puntos[0].procedimiento %></span></p>
          <p>Herramienta/Material: <span id="herramienta"><%= puntos[0].herramienta_material %></span></p>
          <p>Responsable: <span id="responsable"><%= puntos[0].responsable %></span></p>
          
          <!-- Radio buttons para seleccionar el estatus del punto -->
          <div style="margin-top: 20px;">
            <label>
              <input type="radio" name="estado" value="ok" id="estatus-ok"> OK
            </label>
            <label>
              <input type="radio" name="estado" value="nok" id="estatus-nok"> NOK
            </label>
          </div>
  
            <!-- Contenedor para comentario e imágenes cuando se selecciona la opción 'nok' -->
            <div id="nok-contenido" style="display: none; margin-top: 20px;">
              <label for="comentario">Comentario:</label>
              <textarea id="comentario" rows="3" style="width: 100%;"></textarea>
              <label for="imagenes">Subir imágenes:</label>
              <input type="file" id="imagenes-<%= puntos[0].id_punto %>" name="imagenes" multiple style="width: 100%;">
            </div>
        </div>
      </div>
  
      <!-- Botones de navegación entre puntos -->
      <div style="display: flex; gap: 20px;">
        <button id="prev-punto" type="button" style="padding: 10px 20px;">Anterior</button>
        <button id="next-punto" type="button" style="padding: 10px 20px;">Siguiente</button>
      </div>

      <!--Botón para guardar los estados de los puntos -->
      <button id="guardar-estados" type="submit" style="padding: 10px 20px; margin-top: 20px;">Guardar Estados</button>
  
    </div>
  </form>
 
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const puntos = JSON.parse('<%- JSON.stringify(puntos) %>').map(p => ({ ...p, estado: null, comentario: "", imagenes: []}));
      let puntoIndex = 0;
      let imagenIndex = 0;
      

      // Referencias a elementos
      const nokContenido = document.getElementById('nok-contenido');
      const comentarioInput = document.getElementById('comentario');
      const imagenActual = document.getElementById('imagen-actual');
      const orden = document.getElementById('orden');
      const categoria = document.getElementById('categoria');
      const actividad = document.getElementById('actividad');
      const tiempo = document.getElementById('tiempo');
      const procedimiento = document.getElementById('procedimiento');
      const herramienta = document.getElementById('herramienta');
      const responsable = document.getElementById('responsable');
      const guardarEstados = document.getElementById('guardar-estados');

      // Botones
      const prevImg = document.getElementById('prev-img');
      const nextImg = document.getElementById('next-img');
      const prevPunto = document.getElementById('prev-punto');
      const nextPunto = document.getElementById('next-punto');
      

      // Listeners para radios de estado
      const estadoRadios = document.getElementsByName('estado');
      estadoRadios.forEach(radio => {
        radio.addEventListener('change', () => {
          nokContenido.style.display = radio.value === 'nok' ? 'block' : 'none';
        });
      });

      // Función para actualizar el punto
      function actualizarPunto() {
        const punto = puntos[puntoIndex];
        imagenIndex = 0;
        actualizarImagen();

        // Actualiza información
        orden.textContent = punto.orden;
        categoria.textContent = punto.nombre_categoria;
        actividad.textContent = punto.actividad;
        tiempo.textContent = punto.tiempo;
        procedimiento.textContent = punto.procedimiento;
        herramienta.textContent = punto.herramienta_material;
        responsable.textContent = punto.responsable;

        // Actualiza estado
        estadoRadios.forEach(radio => {
          radio.checked = radio.value === punto.estado;
        });
        nokContenido.style.display = punto.estado === 'nok' ? 'block' : 'none';
        comentarioInput.value = punto.comentario;

        // Limpia el input de imágenes al cambiar de punto
        const imagenesInput = document.getElementById(`imagenes-${punto.id_punto}`);
        if (imagenesInput) {
            imagenesInput.value = ""; // Resetea el valor del input
        }

      }
      /* Función para actualizar la imagen de ayuda_visual del punto */
    function actualizarImagen() {
      const punto = puntos[puntoIndex];
      imagenActual.src = `/uploads/${punto.ayuda_visual[imagenIndex]}`;
    }

    //Botón 'Anterior' y 'Siguiente' para navegar entre imágenes
    prevImg.addEventListener('click', () => {
      if (imagenIndex > 0) {
        imagenIndex--;
        actualizarImagen();
      }
    });

    nextImg.addEventListener('click', () => {
      const punto = puntos[puntoIndex];
      if (imagenIndex < punto.ayuda_visual.length - 1) {
        imagenIndex++;
        actualizarImagen();
      }
    });

    //Botón 'Anterior' y 'Siguiente' para navegar entre puntos
    prevPunto.addEventListener('click', () => {
      if (puntoIndex > 0) {
        guardarEstadoActual();
        puntoIndex--;
        actualizarPunto();
      }
    });

    nextPunto.addEventListener('click', () => {
      if (puntoIndex < puntos.length - 1) {
        guardarEstadoActual();
        puntoIndex++;
        actualizarPunto();
      }
    });

      // Función para guardar estado actual
      function guardarEstadoActual() {
        const estadoSeleccionado = Array.from(estadoRadios).find(radio => radio.checked)?.value;
        const punto = puntos[puntoIndex];

        punto.estado = estadoSeleccionado || null;

        if (estadoSeleccionado === 'nok') {
          punto.comentario = comentarioInput.value;

          const imagenesInput = document.getElementById(`imagenes-${punto.id_punto}`);
          if (imagenesInput?.files && imagenesInput.files.length > 0) {
            console.log('Imágenes seleccionadas:', Array.from(imagenesInput.files));
            punto.imagenes = Array.from(imagenesInput.files);
          } else {
            console.log('No hay imágenes seleccionadas');
            punto.imagenes = [];
          }
        } else {
          punto.comentario = '';
          punto.imagenes = [];
        }
      }

      guardarEstados.addEventListener('click', async (event) => {
        event.preventDefault(); // Detener el comportamiento predeterminado del formulario
        guardarEstadoActual(); // Asegurarse de guardar el estado del último punto antes de enviar los datos
        const idTPMElement = document.getElementById('id-tpm');
        const idTPM = idTPMElement.textContent.split(': ')[1];

        const formData = new FormData();

        puntos.forEach((punto) => {
            const puntoData = {
                id_tpm: idTPM,
                id_punto: punto.id_punto,
                status: punto.estado || 'null',
                comentario: punto.comentario || '',
            };

            formData.append('puntos', JSON.stringify(puntoData));

            // Agregar imágenes si están disponibles
            if (Array.isArray(punto.imagenes) && punto.imagenes.length > 0) {
                punto.imagenes.forEach((file) => {
                    formData.append('imagenes', file);
                });
            }

            // Verificar el contenido del FormData
            for (let pair of formData.entries()) {
              console.log('verificacion',pair[0]+ ', ' + pair[1]);
            }
        });

        console.log("formData: ",formData);

        try {
          const response = await fetch('/puntos/tpm-upload', {
          method: 'POST',
          body: formData,
        });

        if (!response.ok) {
          throw new Error(`Error en la respuesta del servidor: ${response.statusText}`);
        }

        const result = await response.json();
        console.log(result);
        alert('Datos guardados correctamente');
      } catch (error) {
        console.error('Error al guardar datos:', error);
        alert('No se pudo conectar con el servidor');
      }
  });

      actualizarPunto();
  });
  </script>

</body>
</html>