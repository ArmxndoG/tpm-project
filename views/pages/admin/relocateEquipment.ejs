<%- include('../../layouts/header') %> <!-- Incluye el header -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Modificar localización</title>
    <link rel="stylesheet" href="/css/agregar_equipo.css">
</head>
<body>

    <div class="container">
        <div class="form-wrapper">
            <h2>Modificar Localización de equipo</h2>
            <div id="form-container">
                <div class="form-group">
                    <label for="equipo-selection">Equipos</label>
                    <select id="equipo-selection">
                        <% if (equipments && equipments.length > 0) { %>
                            <% equipments.forEach(equipment => { %>
                              <option value="<%= equipment.id_equipo %>"><%= equipment.nombre_equipo %></option>
                            <% }); %>
                          <% } else { %>
                            <option value="">No hay equipos disponibles</option>
                        <% } %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="cuarto_actual" >Cuarto Actual</label>
                    <input type="text" id="cuarto_actual" disabled>
                </div>
                <div class="form-group">
                    <label for="cuarto-selection">Nuevo Cuarto</label>
                    <select id="cuarto-selection">
                        <% if (rooms && rooms.length > 0) { %>
                            <% rooms.forEach(room => { %>
                              <option value="<%= room.id_cuarto %>"><%= room.nombre_cuarto %></option>
                            <% }); %>
                          <% } else { %>
                            <option value="">No hay cuartos disponibles</option>
                          <% } %>
                    </select>
                </div>

                <div class="buttons">
                    <button id="prevBtn2" class="secondary" hidden>Anterior</button>
                    <button id="btn_modificar">Modificar</button>
                  </div>

            </div>
               
            </div>
        </div>
    </div>
     <script>
        const btn_modificar = document.getElementById("btn_modificar");
        btn_modificar.addEventListener("click", async (event) =>{
            //Captura de datos del formulairo
            const id_equipo = document.getElementById('equipo-selection').value;
            const id_cuarto = document.getElementById('cuarto-selection').value;
            console.log(id_equipo, " ", id_cuarto);

            try {
                // Enviar los datos al servidor
                const response = await fetch('/tpm/admEquipments/relocateEquipment/relocated', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json', // Especifica que el cuerpo es JSON
                    },
                    body: JSON.stringify({
                        id_equipo: id_equipo,
                        id_cuarto: id_cuarto,
                    })
                });

                const result = await response.json();
                if (response.ok) {
                    alert('Equipo registrado exitosamente');
                    console.log('Respuesta del servidor:', result);
                } else {
                    console.error('Error del servidor:', result);
                    alert('Error al enviar los datos');
                }
            } catch (error) {
                console.error('Error al enviar la solicitud:', error);
                alert('Error al enviar los datos');
            }

        });

        document.addEventListener('DOMContentLoaded', async function () {//al terminar de cargar el DOM de la pagina...
            // Obtener el primer cuarto seleccionado por defecto
            const equipoSelection = document.getElementById('equipo-selection');
            const equipoId = equipoSelection.value;
            console.log("ID: ",equipoId);
            // Reutilizar la lógica para obtener y mostrar los equipos asociados
            await fetchAndPopulateEquipment(equipoId);
        });
        
        document.getElementById('equipo-selection').addEventListener('change', async function () {//al cambiar la opción del select..
            // Obtener el cuarto seleccionado por el usuario
            const equipoId = this.value;
        
            // Reutilizar la lógica para obtener y mostrar los equipos asociados
            await fetchAndPopulateEquipment(equipoId);
        });
        
        async function fetchAndPopulateEquipment(equipoId) {
            // Seleccionar el elemento <select> para los equipos
            const cuartoActual = document.getElementById('cuarto_actual');
            cuartoActual.innerHTML = '';
        
            try {
                // Realizar una solicitud a la ruta del servidor para obtener los equipos del cuarto seleccionado
                const response = await fetch(`/tpm/admEquipments/relocateEquipment/${equipoId}`);
    
                if (!response.ok) throw new Error('Error al cuarto asociado al equipo');
        
                const cuarto_actual = await response.json();
                console.log("El cuarto actual del equipo: ",equipoId," es: ",cuarto_actual)

                // Actualizar el valor del input de texto con el nombre del cuarto
                cuartoActual.value = cuarto_actual[0].nombre_cuarto;

            } catch (err) {
                // Manejo de errores: Mostrar en consola si ocurre un problema
                console.error('Error:', err.message);
            }
        }
        </script>
</body>

</html>