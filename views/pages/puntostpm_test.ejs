<%- include('../layouts/header') %> <!-- Incluye el header -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TPM</title>
</head>
<body>
  <h2>ID CUARTO: <%= id_cuarto %></h2>
  <h2>ID EQUIPO: <%= id_equipo %></h2>
  <h2 id="id-tpm">ID TPM: <%= id_tpm %></h2>

  <div id="contenedor-puntos" style="display: flex; flex-direction: column; gap: 20px;">
    <!-- Renderizado dinamico de los puntos asociados al equipo seleccionado -->
    <% puntos.forEach((punto, index) => { %>
    <div class="punto-contenedor" data-index="<%= index %>" style="border: 1px solid #ccc; padding: 20px; border-radius: 10px;">
      <h3>Orden: <%= punto.orden %></h3>
      <p>Categoría: <%= punto.nombre_categoria %></p>
      <p>Actividad: <%= punto.actividad %></p>
      <p>Tiempo: <%= punto.tiempo %></p>
      <p>Procedimiento: <%= punto.procedimiento %></p>
      <p>Herramienta/Material: <%= punto.herramienta_material %></p>
      <p>Responsable: <%= punto.responsable %></p>
  
      <!-- Radio buttons para el Estado OK/NOK con nombre unico-->
      <div>
        <label>
          <input type="radio" name="estado-<%= index %>" value="ok"> OK
        </label>
        <label>
          <input type="radio" name="estado-<%= index %>" value="nok"> NOK
        </label>
      </div>
  
      <!-- Input de imagen y comentario para el estado NOK-->
      <div class="nok-contenido" style="display: none; margin-top: 20px;">
        <label for="comentario-<%= index %>">Comentario:</label>
        <textarea id="comentario-<%= index %>" rows="3" style="width: 100%;" required></textarea>
        <label for="imagenes-<%= index %>">Subir imágenes:</label>
        <input type="file" id="imagenes-<%= index %>" name="imagenes" multiple style="width: 100%;" required>
      </div>
    </div>
    <% }) %>
  </div>
  <!--Botón para enviar los estados de los puntos y su imagen/comentario en caso de ser 'nok' al servidor -->
  <button id="guardar-estados" type="submit" style="padding: 10px 20px; margin-top: 20px;">Guardar Estados</button>

  <script>
    /* Al cargarse la pagina....*/
    document.addEventListener('DOMContentLoaded', () => {
      const puntos = JSON.parse('<%- JSON.stringify(puntos) %>').map(p => ({ ...p, estado: null, comentario: "", imagenes: [] }));
      const guardarEstados = document.getElementById('guardar-estados');

      
      /*manejar el cambio en los botones de radio (radio buttons) con nombres que comienzan con "estado-".
       Cuando se selecciona una opción, se muestra u oculta el contenido correspondiente a 'nok'. */
      /*document.querySelectorAll('[name^="estado-"]').forEach(radio => {
       
        radio.addEventListener('change', (event) => {
          const container = event.target.closest('.punto-contenedor');
          const nokContenido = container.querySelector('.nok-contenido');
          nokContenido.style.display = event.target.value === 'nok' ? 'block' : 'none';
        });
      });*/
      // Manejar el cambio en los radios OK/NOK para la visibilidad del contenido NOK

      // Función para manejar el cambio en un radio button
      function manejarCambioRadio(event) {
        // Encontrar el contenedor más cercano con la clase 'punto-contenedor'
        const container = event.target.closest('.punto-contenedor');
        // Seleccionar el contenido 'nok' dentro del contenedor
        const nokContenido = container.querySelector('.nok-contenido');
        // Mostrar u ocultar el contenido 'nok' basado en el valor del radio button
        nokContenido.style.display = event.target.value === 'nok' ? 'block' : 'none';
      }

      // Seleccionar todos los radio buttons cuyo nombre comienza con 'estado-'
      const radios = document.querySelectorAll('[name^="estado-"]');

      // Añadir el evento de cambio a cada radio button
      radios.forEach(radio => {
        radio.addEventListener('change', manejarCambioRadio);
      });

      guardarEstados.addEventListener('click', async (event) => {
        event.preventDefault();

        // Crea un nuevo objeto FormData para enviar los datos del formulario
        const formData = new FormData();

        // Recorrer cada punto y añadir los datos al formData
        puntos.forEach((punto, index) => {
          // Seleccionar el contenedor del punto actual basado en el índice
          const container = document.querySelector(`.punto-contenedor[data-index="${index}"]`);
          // Obtener el valor del radio button seleccionado para el estado del punto
          const estadoSeleccionado = container.querySelector(`[name="estado-${index}"]:checked`)?.value;
          // Asignar el estado seleccionado al objeto punto
          punto.estado = estadoSeleccionado || null;

          formData.append(`puntos[${index}][id_tpm]`, '<%= id_tpm %>');
          formData.append(`puntos[${index}][id_punto]`, punto.id_punto);
          formData.append(`puntos[${index}][estado]`, estadoSeleccionado || "");

          // Si el estado seleccionado es 'nok', añadir el comentario y las imágenes
          if (estadoSeleccionado === 'nok') {

            //Obtener el comentario del textarea
            punto.comentario = container.querySelector(`#comentario-${index}`).value;
            //Añaadir el comentario al formData
            formData.append(`puntos[${index}][comentario]`, punto.comentario);

            //Obtener las imágenes del input file
            const imagenesInput = container.querySelector(`#imagenes-${index}`);
            //Añadir cada imagen seleccionada al objeto formData
            Array.from(imagenesInput.files).forEach((file, fileIndex) => {
              formData.append(`imagenes_${punto.id_punto}[]`, file);
            });
          }
        });
      

        try {
          const response = await fetch('/puntos/tpm-upload', {
            method: 'POST',
            body: formData,
          });

          const result = await response.json();
          if (response.ok) {
            alert('Datos enviados correctamente');
            console.log('Respuesta del servidor:', result);
          } else {
            console.error('Error del servidor:', result);
            alert('Error al enviar los datos');
          }
        } catch (error) {
          console.error('Error al enviar la solicitud:', error);
          alert('Error al enviar los datos');
        }
      });
});
  </script>
  

</body>
</html>